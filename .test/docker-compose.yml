# sudo docker compose build --no-cache
# sudo docker compose create --force-recreate
# sudo docker compose up
# 
# sudo docker compose up --build --force-recreate
# 
# sudo docker compose down
# sudo docker compose rm

version: '3.8'

services:

  postgresql:
    build:
      context: .
      dockerfile: ./postgresql/Dockerfile
    restart: "no"
    network_mode: "host" # 5432
    command: postgres -c shared_preload_libraries=pgaudit,pgsodium
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: ${POSTGRES_USER:?error}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?error}
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
    volumes:
     - ./volumes/postgresql/data:/var/lib/postgresql/data
     - ./postgresql/entrypoint:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready --username=postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgrest:
    image: postgrest/postgrest
    network_mode: "host" # 5433
    environment:
      PGRST_DB_ANON_ROLE: anon
      PGRST_DB_SCHEMAS: ${PGRST_DB_SCHEMAS:?error}
      PGRST_DB_EXTRA_SEARCH_PATH: ${PGRST_DB_EXTRA_SEARCH_PATH:?error}
      PGRST_DB_URI: postgresql://${POSTGRES_USER:?error}:${POSTGRES_PASSWORD:?error}@localhost:5432/postgres
      PGRST_SERVER_PORT: 5433
      PGRST_JWT_SECRET: ${PGRST_JWT_SECRET:?error}
      PGRST_JWT_SECRET_IS_BASE64: ${PGRST_JWT_SECRET_IS_BASE64:?error}
      PGRST_JWT_AUD: crestfall
    depends_on:
      postgresql:
        condition: service_healthy

  # https://github.com/supertokens/supertokens-docker-postgresql
  # https://supertokens.com/docs/passwordless/common-customizations/core/logging
  supertokens:
    image: registry.supertokens.io/supertokens/supertokens-postgresql:4.3
    restart: unless-stopped
    network_mode: "host" # 3567
    environment:
      LOG_LEVEL: "WARN"
      POSTGRESQL_CONNECTION_URI: "postgresql://${POSTGRES_USER:?error}:${POSTGRES_PASSWORD:?error}@localhost:5432/postgres"
      POSTGRESQL_TABLE_NAMES_PREFIX: "supertokens"
      INFO_LOG_PATH: /var/lib/supertokens/info
      ERROR_LOG_PATH: /var/lib/supertokens/error
    volumes:
      - ./volumes/supertokens/info:/var/lib/supertokens/info
      - ./volumes/supertokens/error:/var/lib/supertokens/error
    depends_on:
      postgresql:
        condition: service_healthy
    healthcheck:
      test: >
        bash -c 'exec 3<>/dev/tcp/127.0.0.1/3567 && echo -e "GET /hello HTTP/1.1\r\nhost: 127.0.0.1:3567\r\nConnection: close\r\n\r\n" >&3 && cat <&3 | grep "Hello"'
      interval: 10s
      timeout: 5s
      retries: 5